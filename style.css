/* Lato Font */
@import url('https://fonts.googleapis.com/css?family=Lato:300,500,700&display=swap');

:root{
  --closeRed: red;
  --closeOrange: #ff8000;
}

* {
  box-sizing: border-box;
}

body {
  background-color: #E3FDFD;
  font-family: 'Lato', sans-serif;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
  margin: 0;
  /* No Scrollbars */
  overflow: hidden;
}

h1 {
  position: relative;
}

h1 > .title {
  /* Hide the element but keep it in the document layout so that others
  can flow around it. Position is kept. */
  visibility: hidden;
}

h1 button {
  position: absolute;
  right: 0;
  transform: translate(120%,-50%);
  /* Always at the top */
  z-index: 2;
}

.btn {
  background-color: white;
  border: 1px solid #aaa;
  border-radius: 3px;
  font-size: 14px;
  margin-top: 20px;
  padding: 10px 15px;
}

/* Applies to the "x" button to escape out the Overlay: Add New Card */
.btn-ghost {
  border: 0;
  background-color: transparent;
  height: 40px;
  width: 45px;
  /* box-shadow: rgba(0, 0, 0, 0.15) 0 4px 7px; */
}

.btn-ghost:hover {
  color: #FF2E63;
  background-color: #A6E3E9;
  box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;
}

.btn-ghost:active {
  box-shadow: none;
} 

.close-container{
  position: absolute;
  cursor: pointer;
}

.leftright{
  height: 2px;
  width: 25px;
  position: absolute;
  background-color: var(--closeOrange);
  border-radius: 2px;
  transform: rotate(45deg);
  transition: all .3s ease-in;
}

.rightleft{
  height: 2px;
  width: 25px;
  position: absolute;
  /* margin-top: 24px; */
  background-color: var(--closeOrange);
  border-radius: 2px;
  transform: rotate(-45deg);
  transition: all .3s ease-in;
}

label{
  color: black;
  font-family: Helvetica, Arial, sans-serif; 
  font-size: .7em;
  font-weight: bolder;
  text-transform: uppercase;
  letter-spacing: 2px;
  transition: all .3s ease-in;
  opacity: 0;
}

/* Have label right above the close container */
.close{
  margin: -40px 0px 0px -20px;
  position: absolute;
}

.close-container:hover .leftright{
  transform: rotate(-45deg);
  background-color: var(--closeRed);
}
.close-container:hover .rightleft{
  transform: rotate(45deg);
  background-color: var(--closeRed);
}

.close-container:hover label{
  opacity: 1;
}
/* End of close button */


/* Keep the clear button bottom left */
.clear {
  position: absolute;
  bottom: 30px;
  left: 30px;
  /* Inspired by PaperCSS */
  align-self: center;
  background-color: #fff;
  background-image: none;
  background-position: 0 90%;
  background-repeat: repeat no-repeat;
  background-size: 4px 3px;
  border-radius: 15px 225px 255px 15px 15px 255px 225px 15px;
  border-style: solid;
  border-width: 2px;
  box-shadow: rgba(0, 0, 0, .2) 15px 28px 25px -18px;
  box-sizing: border-box;
  color: #41403e;
  cursor: pointer;
  display: inline-block;
  font-family: Neucha, sans-serif;
  font-size: 1rem;
  line-height: 23px;
  outline: none;
  padding: .75rem;
  text-decoration: none;
  transition: all 235ms ease-in-out;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  /* Gives it that paper edges look
  border-bottom-left-radius: 15px 255px;
  border-bottom-right-radius: 225px 15px;
  border-top-left-radius: 255px 15px;
  border-top-right-radius: 15px 225px;
  */
}

.clear:hover {
  box-shadow: rgba(0, 0, 0, .3) 2px 8px 8px -5px;
  transform: translate3d(0, 2px, 0);
}

.clear:focus {
  box-shadow: rgba(0, 0, 0, .3) 2px 8px 4px -6px;
}

button svg {
  /* w-6 h-6 is 1.5rem (24px) in Tailwind CSS */
  width: 24px;
  height: 24px;
}

.btn-small {
  /* font-size: 12px; */
  padding: 5px 10px;
}

.btn-small svg{
  width: 20px;
  height: 20px; 
}

/* WOW! This here centered the text vertically within the button containing an
svg (plus sign). Had to target the text by wrapping it in a span to style as a
child element. Then used -0.3em rather than px to accomodate font-size changes */
.btn > span {
  position: relative;
  top: -0.3em;
}

/* Fancy Add New Card Button with a transition for alternative text */
.btn-add-new {
  /* position: relative; */
  overflow: hidden;
  border: 1px solid #18181a;
  color: #18181a;
  display: inline-block;
  font-size: 15px;
  line-height: 15px;
  padding: 7px;
  text-decoration: none;
  cursor: pointer;
  background: #fff;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
}

.btn-add-new span:first-child {
  position: relative;
  transition: color 600ms cubic-bezier(0.48, 0, 0.12, 1);
  z-index: 10;
}

.btn-add-new span:last-child {
  color: white;
  display: block;
  position: absolute;
  bottom: 0;
  transition: all 500ms cubic-bezier(0.48, 0, 0.12, 1);
  z-index: 100;
  opacity: 0;
  top: 50%;
  left: 50%;
  transform: translateY(225%) translateX(-50%);
  height: 14px;
  line-height: 13px;
}

.btn-add-new:after {
  content: "";
  position: absolute;
  bottom: -50%;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #373B44;
  transform-origin: bottom center;
  transition: transform 600ms cubic-bezier(0.48, 0, 0.12, 1);
  transform: skewY(9.3deg) scaleY(0);
  z-index: 50;
}

.btn-add-new:hover:after {
  transform-origin: bottom center;
  transform: skewY(9.3deg) scaleY(2);
}

.btn-add-new:hover span:last-child {
  transform: translateX(-50%) translateY(-100%);
  opacity: 1;
  transition: all 900ms cubic-bezier(0.48, 0, 0.12, 1);
}
/* End of embellished "Add New Card" button */

#add-card {
  appearance: none;
  background-color: white;
  border: 2px solid #1A1A1A;
  border-radius: 15px;
  box-sizing: border-box;
  color: #3B3B3B;
  cursor: pointer;
  display: inline-block;
  font-family: 'Lato', "Segoe UI",Helvetica,Arial,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: normal;
  margin: 0;
  min-height: 60px;
  min-width: 0;
  outline: none;
  padding: 16px 24px;
  text-align: center;
  text-decoration: none;
  transition: all 300ms cubic-bezier(.23, 1, 0.32, 1);
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  /* width: 100%; */
  will-change: transform;
}

#add-card:hover {
  color: #fff;
  background-color: #1A1A1A;
  box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;
  transform: translateY(-2px);
}

#add-card:active {
  box-shadow: none;
  transform: translateY(0);
}

.cards {
  perspective: 1000px;
  position: relative;
  height: 300px;
  width: 500px;
  max-width: 100%;
}

.card {
  /* Out of regular flow and puts them on top of each other */
  position: absolute;
  opacity: 0;
  font-size: 1.5em;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  /* Flash Card animation that flips the card */
  transform: translateX(50%) rotateY(-10deg);
  transition: 0.4s ease, opacity 0.4s ease;
}

/* Active card always on top with z-index */
.card.active {
  opacity: 1;
  cursor: pointer;
  z-index: 10;
  /* When card is active it returns to normal position after animation */
  transform: translateX(0) rotateY(0deg);
}

/* Left class is on same element as card class */
.card.left {
  transform: translateX(-50%) rotateY(10deg);
}

.inner-card {
  box-shadow: 0 1px 10px rgba(0,0,0,0.3);
  border-radius: 4px;
  height: 100%;
  width: 100%;
  /* Relative because inner-card-front are inner-card-back positioned 
  absolute within it */
  position: relative;
  /* Parent of inner-card-front/back needs to have this property where children
  of this element should be positioned in the 3D space. This is necessary to 
  show the back-facing div upon flipping the card. */
  transform-style: preserve-3d;
  /* When show-answer class is added to the card, the flip animation will start */
  transition: transform 0.4s ease;
}

/* During rotation, class of show-answer rotates it on the x-axis */
.card.show-answer .inner-card {
  transform: rotateX(180deg);
}

.inner-card-front, 
.inner-card-back {
  position: absolute;
  top: 0;
  left: 0;
  /* Align in the middle */
  display: flex;
  align-items: center;
  justify-content: center;
  /* For alignment to work, set height and width to 100 */
  height: 100%;
  width: 100%;
  /* Don't show both question/answer at the same time */
  background: white;
  /* Only see answer because it is the 2nd one. Answer's background
  covers the question */
  /* Hide backface of a card when it is faced towards us */
  backface-visibility: hidden;
}

.inner-card-front {
  transform: rotateX(0deg);
  z-index: 2;
}

.inner-card-back {
  transform: rotateX(180deg);
}

/* Pseudo-selector of after, since we will insert content after both of these flip 
Will have an icon of sorts to let the user know to flip. */
.inner-card-front::after, 
.inner-card-back::after {
  /* Anitclockwise Gapped Circle Arrow - U+27F2, &#10226; \27F2 */
  content: '‚ü≤'; 
  position: absolute;
  top: 10px;
  right: 10px;
  font-weight: bold;
  font-size: 16px;
  color: #D0C9C0;
}

.navigation {
  display: flex;
  margin: 20px 0;
}

.navigation .nav-button {
  border: none;
  background-color: transparent;
  cursor: pointer;
  font-size: 16px;
}

/* page of card */
.navigation p {
  margin: 0 25px;
}

.add-container {
  /* Sets the add new card overlay as invisible and go behind the cards*/
  opacity: 0;
  z-index: -1;
  background-color: #CBF1F5;
  border-top: 2px solid #eee;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 10px 0;
  /* Makes the overlay like a new page */
  position: absolute;
  top: 0;
  bottom: 0;
  width: 100%;
  transition: 0.3s ease;
}

/* show class shows the add card overlay */
.add-container.show {
  opacity: 1;
  z-index: 2;
}

.add-container h3 {
  margin: 10px 0;
}

.form-group label {
  display: block;
  margin: 15px 0 10px;
  text-align: center;
  visibility: hidden;
}

.form-group textarea {
  border: 1px solid #aaa;
  border-radius: 3px;
  font-size: 16 px;
  padding: 12px;
  min-width: 500px;
  max-width: 100%;
  height: 175px;
  resize: none;
}